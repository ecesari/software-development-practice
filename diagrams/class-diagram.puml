@startuml Class
class User {
    string Id
    string Name
    string EmailAddress
    string Password
    string Bio
    string PhotoUrl
    UserRole Role
    void CreateEvent(string title, string description, string location, datetime time)
    void CreateService(string title, string description, string location, datetime time, int hours)
    void RequestServiceParticipation(int eventId)
    void ApproveServiceParticipation(int requestId)
    void FollowUser(int userId)

}

User "1" *-- "*" Event : creates  
User "1" *-- "*" Service : creates  
User "*" -- "*" User : follows  


enum UserRole {
    Admin
    User
}

User  *--  UserRole 

class Event {
    string Id
    string Header
    string Description
    string Location
    DateTime Time
    ' int Hours
    DateTime CreatedDateTime
    int CreatedUserId
    ' int Quota
    ' TypeEvent Type 
    ' int FlagCount
}

class Service {
    string Id
    string Header
    string Description
    string Location
    DateTime Time
    int Hours
    DateTime CreatedDateTime
    int CreatedUserId
    int Quota
    ' TypeEvent Type 
    int FlagCount
}


' User "1" *-- "*" Event : creates  
' Event  *--  TypeEvent 

' enum TypeEvent {
'     Service
'     Event
' }

class Tag{
    int Id
    string Name
}

User "*" -- "*" Tag   
Event "*" -- "*" Tag  
Service "*" -- "*" Tag  

class Request{
    int Id
    int RequesterUserId
    int RequestedEventId
    int ApprovedByUserId
    ApprovalStatus ApprovalStatus
}
User "1" *-- "*" Request : requests   
Service "1" *-- "*" Request  
User "1" *-- "*" Request : approves   
ApprovalStatus "1" *-- "*" Request    

enum ApprovalStatus {
    Pending
    Approved
    Denied
}

class Notification {
    string Id
    string UserId
    string Message
    bool Read
}


User "1" --* "*" Notification   

@enduml